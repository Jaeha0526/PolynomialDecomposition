(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



GetFileDirectory[]:=If[$InputFileName==="",NotebookDirectory[],DirectoryName@$InputFileName];
$MainFileScriptQ=$InputFileName=!="";
AppendTo[$Path,GetFileDirectory[]];
SetDirectory@GetFileDirectory[];


Get["Infrastructure.m"];


MMAExprToJFString$NumberFormat2[num_Integer]:={If[num>0,"P2","N2"]}~Join~("S"<>ToString[#]&/@IntegerDigits[num,10]);

MMAExprToJFString2[expr_]:=Module[{},
ToPrefixNotation[expr]/.{
{a,i_}:>{"A"<>ToString[i]}
}/.{
{b,i_}:>{"B"<>ToString[i]}
}/.{Plus->"+2",Power->"^2",Times->"*2"}/.{a_Integer:>MMAExprToJFString$NumberFormat2[a]}//Flatten//StringRiffle
];


Get["MMA2TxtFormat3.m"];


GenerateTrainSet$MMAFormat[n_Integer]:=
Monitor[
Table[RandomPolynomial$PolyNInPoly1$LSS[5,2,20,4,{a[1]}],{i,n}],
Row[{"Generating element: ", i}]
];

GenerateTrainSet$LLMFormat[data$MMAformat_List,datatype_]:=Module[
{long,short,sub,result,formatter,language},

result=Monitor[
Table[
language={MMAExprToJFString,MMAExprToJFString2};
formatter=If[datatype===Null,language[[RandomChoice[{1,2}]]],language[[datatype]]];
{long,short,sub}=data$MMAformat[[i]];
formatter[long]<>" ? "<>formatter[sub]
,{i,Length[data$MMAformat]}],
Row[{"Generating element: ", i}]];

result
];

GenerateTrainSet$LLMFormat[n_Integer,datatype_]:=Module[
{},
GenerateTrainSet$LLMFormat[GenerateTrainSet$MMAFormat[n],datatype]
];



PrepareLLMTrainingData[size_,name_,path_:"./TrainingData",datatype_:Null]:=Module[
{set$LLMformat},
set$LLMformat=GenerateTrainSet$LLMFormat[size,datatype];

Print[name];
Print[Length[set$LLMformat]];

Export[FileNameJoin[{path,"valid_set_"<>name<>".txt"}],set$LLMformat[[1;;128]],"Text"];
Export[FileNameJoin[{path,"test_set_"<>name<>".txt"}],set$LLMformat[[129;;3128]],"Text"];
Export[FileNameJoin[{path,"train_set_"<>name<>".txt"}],set$LLMformat[[3129;;-1]],"Text"];
];

